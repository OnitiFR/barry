# Sample configuration
# This use default values, except for settings with "***"

# Barry will watch this directory, looking for new backups.
queue_path = "var/queue"

# Barry will keep its data in this directory. It includes internal databases
# but also local cold storage cache, so you will need free space here.
# You must use the same "system storage partition" as queue_path, because Barry
# will move large files from queue_path to local_storage_path.
local_storage_path = "var/storage"

# Maximum files to upload at the same time
# warning: minimum required memory = num_uploaders * chunk_size * 2
num_uploaders = 2

# Barry can backup its databases (files & API keys) in any container.
# Notes: config file is not included, includes sensitive data, keep blank
# to disable, see -restore flag to restore backuped databases.
self_backup_container = "backup_hot"

## API server configuration
[api]
# Listen address of Barry API server (no IP = all interfaces)
listen = ":8787"


# Default file expiration settings, it's possible to customize this at project
# level using the client.
#
# - format: keep XX [day(s)|year(s)] every YY [day|file]
# - if no "every" part is given, it's the default whatever the day/file
# - longest value wins, of course
#
# Notes :
# - for "multi-files" backups, prefer to use "day" instead of "file"
# - a "day" stops at midnight, watchout for backups close to midnight.
# - changing these settings does not impact existing backups (but it will
#   update existing non-customized project expirations)
[expiration]
local = [
    "keep 30 days",
]
remote = [
    "keep 30 days",
    "keep 90 days every 7 files",
#    "keep 1 year every 90 days",
]


# Swift API settings, currently tested only with auth V3 style, older
# versions and environment reading are in the TODO.
[swift]
username = "***"
api_key = "***" # "password" in older auth
auth_url = "***"
domain = "Default" # specific to V3 auth
region = "***"
chunk_size = "512M" # large objects are split


# Storage containers. (Barry will check if related _segments containers exists, too)
# Each container can have a cost expression, so barry can decide where to
# put a file to get the lowest cost. Default cost is 0.
# Available variables for cost expression:
# size (in bytes), size_KB, size_MB, size_GB, size_TB
# duration_secs, duration_secs, duration_hours, duration_days, duration_months, duration_years (storage duration)
[[container]]
name = "backup_hot"
cost = "0.01 * size_GB * duration_months"

[[container]]
name = "backup_cold"
cost = "(0.01 * size_GB) + (0.002 * size_GB * duration_months)"


# Push destinations. Barry can push a file directly to a remote host (server
# to server).
# Currently, only the "mulch" type is supported. See "file push" command.
[[push_destination]]
name = "mulch"
type = "mulch"
url = "https://mulch.host:8686"
key = "xxx"
